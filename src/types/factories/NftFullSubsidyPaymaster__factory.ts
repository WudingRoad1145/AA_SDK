/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NftFullSubsidyPaymaster,
  NftFullSubsidyPaymasterInterface,
} from "../NftFullSubsidyPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "addNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nftWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "removeNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b7338038062001b738339818101604052810190620000379190620002c9565b80620000586200004c6200007160201b60201c565b6200007960201b60201c565b62000069816200013d60201b60201c565b50506200037e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014d6200019160201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620001a16200007160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001c76200022260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000217906200035c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027d8262000250565b9050919050565b6000620002918262000270565b9050919050565b620002a38162000284565b8114620002af57600080fd5b50565b600081519050620002c38162000298565b92915050565b600060208284031215620002e257620002e16200024b565b5b6000620002f284828501620002b2565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062000344602083620002fb565b915062000351826200030c565b602082019050919050565b60006020820190508181036000830152620003778162000335565b9050919050565b6117e5806200038e6000396000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102cb578063d0e30db0146102f6578063f2fde38b14610300578063f465c77e14610329576100f3565b8063a9a2340914610237578063b0d691fe14610260578063bb9fe6bf1461028b578063c23a5cea146102a2576100f3565b806346b31b6e116100c657806346b31b6e1461018f578063584465f2146101cc578063715018a6146101f55780638da5cb5b1461020c576100f3565b80630396cb60146100f857806312d98f2414610114578063205c28781461013d578063447a91fd14610166575b600080fd5b610112600480360381019061010d9190610d84565b610366565b005b34801561012057600080fd5b5061013b60048036038101906101369190610e0f565b61049c565b005b34801561014957600080fd5b50610164600480360381019061015f9190610eb0565b6104ff565b005b34801561017257600080fd5b5061018d60048036038101906101889190610e0f565b61059a565b005b34801561019b57600080fd5b506101b660048036038101906101b19190610e0f565b6105fd565b6040516101c39190610f0b565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190610f64565b61061d565b005b34801561020157600080fd5b5061020a610669565b005b34801561021857600080fd5b5061022161067d565b60405161022e9190610fa0565b60405180910390f35b34801561024357600080fd5b5061025e60048036038101906102599190611045565b6106a6565b005b34801561026c57600080fd5b506102756106c0565b6040516102829190611118565b60405180910390f35b34801561029757600080fd5b506102a06106e6565b005b3480156102ae57600080fd5b506102c960048036038101906102c49190611133565b610772565b005b3480156102d757600080fd5b506102e061080a565b6040516102ed919061116f565b60405180910390f35b6102fe6108ad565b005b34801561030c57600080fd5b5061032760048036038101906103229190610e0f565b61093d565b005b34801561033557600080fd5b50610350600480360381019061034b91906111e5565b6109c0565b60405161035d91906112e4565b60405180910390f35b61036e610b92565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb603483600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663390b99786040518163ffffffff1660e01b81526004016020604051808303816000875af115801561041d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610441919061131b565b61044b9190611377565b6040518363ffffffff1660e01b815260040161046791906113be565b6000604051808303818588803b15801561048057600080fd5b505af1158015610494573d6000803e3d6000fd5b505050505050565b6104a4610b92565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610507610b92565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016105649291906113e8565b600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b505050505050565b6105a2610b92565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b610625610b92565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610671610b92565b61067b6000610c10565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106ae610cd4565b6106ba84848484610d30565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ee610b92565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075857600080fd5b505af115801561076c573d6000803e3d6000fd5b50505050565b61077a610b92565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016107d59190611411565b600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108679190610fa0565b602060405180830381865afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190611441565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b81526004016109099190610fa0565b6000604051808303818588803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b5050505050565b610945610b92565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab906114f1565b60405180910390fd5b6109bd81610c10565b50565b60606000848061012001906109d59190611520565b60149080926109e69392919061158d565b906109f1919061160c565b60601c9050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906116b7565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231876000016020810190610ab39190610e0f565b6040518263ffffffff1660e01b8152600401610acf9190610fa0565b602060405180830381865afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190611441565b905060008111610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90611723565b60405180910390fd5b856000016020810190610b689190610e0f565b604051602001610b789190610fa0565b604051602081830303815290604052925050509392505050565b610b9a610d36565b73ffffffffffffffffffffffffffffffffffffffff16610bb861067d565b73ffffffffffffffffffffffffffffffffffffffff1614610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c059061178f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d2e57600080fd5b565b50505050565b600033905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b610d6181610d48565b8114610d6c57600080fd5b50565b600081359050610d7e81610d58565b92915050565b600060208284031215610d9a57610d99610d3e565b5b6000610da884828501610d6f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ddc82610db1565b9050919050565b610dec81610dd1565b8114610df757600080fd5b50565b600081359050610e0981610de3565b92915050565b600060208284031215610e2557610e24610d3e565b5b6000610e3384828501610dfa565b91505092915050565b6000610e4782610db1565b9050919050565b610e5781610e3c565b8114610e6257600080fd5b50565b600081359050610e7481610e4e565b92915050565b6000819050919050565b610e8d81610e7a565b8114610e9857600080fd5b50565b600081359050610eaa81610e84565b92915050565b60008060408385031215610ec757610ec6610d3e565b5b6000610ed585828601610e65565b9250506020610ee685828601610e9b565b9150509250929050565b60008115159050919050565b610f0581610ef0565b82525050565b6000602082019050610f206000830184610efc565b92915050565b6000610f3182610dd1565b9050919050565b610f4181610f26565b8114610f4c57600080fd5b50565b600081359050610f5e81610f38565b92915050565b600060208284031215610f7a57610f79610d3e565b5b6000610f8884828501610f4f565b91505092915050565b610f9a81610dd1565b82525050565b6000602082019050610fb56000830184610f91565b92915050565b60038110610fc857600080fd5b50565b600081359050610fda81610fbb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261100557611004610fe0565b5b8235905067ffffffffffffffff81111561102257611021610fe5565b5b60208301915083600182028301111561103e5761103d610fea565b5b9250929050565b6000806000806060858703121561105f5761105e610d3e565b5b600061106d87828801610fcb565b945050602085013567ffffffffffffffff81111561108e5761108d610d43565b5b61109a87828801610fef565b935093505060406110ad87828801610e9b565b91505092959194509250565b6000819050919050565b60006110de6110d96110d484610db1565b6110b9565b610db1565b9050919050565b60006110f0826110c3565b9050919050565b6000611102826110e5565b9050919050565b611112816110f7565b82525050565b600060208201905061112d6000830184611109565b92915050565b60006020828403121561114957611148610d3e565b5b600061115784828501610e65565b91505092915050565b61116981610e7a565b82525050565b60006020820190506111846000830184611160565b92915050565b600080fd5b600061016082840312156111a6576111a561118a565b5b81905092915050565b6000819050919050565b6111c2816111af565b81146111cd57600080fd5b50565b6000813590506111df816111b9565b92915050565b6000806000606084860312156111fe576111fd610d3e565b5b600084013567ffffffffffffffff81111561121c5761121b610d43565b5b6112288682870161118f565b9350506020611239868287016111d0565b925050604061124a86828701610e9b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128e578082015181840152602081019050611273565b60008484015250505050565b6000601f19601f8301169050919050565b60006112b682611254565b6112c0818561125f565b93506112d0818560208601611270565b6112d98161129a565b840191505092915050565b600060208201905081810360008301526112fe81846112ab565b905092915050565b60008151905061131581610d58565b92915050565b60006020828403121561133157611330610d3e565b5b600061133f84828501611306565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138282610d48565b915061138d83610d48565b9250828201905063ffffffff8111156113a9576113a8611348565b5b92915050565b6113b881610d48565b82525050565b60006020820190506113d360008301846113af565b92915050565b6113e281610e3c565b82525050565b60006040820190506113fd60008301856113d9565b61140a6020830184611160565b9392505050565b600060208201905061142660008301846113d9565b92915050565b60008151905061143b81610e84565b92915050565b60006020828403121561145757611456610d3e565b5b60006114658482850161142c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114db60268361146e565b91506114e68261147f565b604082019050919050565b6000602082019050818103600083015261150a816114ce565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261153d5761153c611511565b5b80840192508235915067ffffffffffffffff82111561155f5761155e611516565b5b60208301925060018202360383131561157b5761157a61151b565b5b509250929050565b600080fd5b600080fd5b600080858511156115a1576115a0611583565b5b838611156115b2576115b1611588565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b600061161883836115c8565b8261162381356115d3565b925060148210156116635761165e7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026115ff565b831692505b505092915050565b7f4e6674206e6f742077686974656c697374656400000000000000000000000000600082015250565b60006116a160138361146e565b91506116ac8261166b565b602082019050919050565b600060208201905081810360008301526116d081611694565b9050919050565b7f4e6f206e66747320666f756e642061742077616c6c6574206164647265737300600082015250565b600061170d601f8361146e565b9150611718826116d7565b602082019050919050565b6000602082019050818103600083015261173c81611700565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061177960208361146e565b915061178482611743565b602082019050919050565b600060208201905081810360008301526117a88161176c565b905091905056fea2646970667358221220d9648aecf70b69c21557a1853dc4e92580e236fa86a5bc92c9c1a355cacb4dff64736f6c63430008110033";

type NftFullSubsidyPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftFullSubsidyPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftFullSubsidyPaymaster__factory extends ContractFactory {
  constructor(...args: NftFullSubsidyPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftFullSubsidyPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<NftFullSubsidyPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): NftFullSubsidyPaymaster {
    return super.attach(address) as NftFullSubsidyPaymaster;
  }
  override connect(signer: Signer): NftFullSubsidyPaymaster__factory {
    return super.connect(signer) as NftFullSubsidyPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftFullSubsidyPaymasterInterface {
    return new utils.Interface(_abi) as NftFullSubsidyPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftFullSubsidyPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftFullSubsidyPaymaster;
  }
}
